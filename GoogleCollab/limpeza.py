# -*- coding: utf-8 -*-
"""InvestimentosPublicos

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZlttT7fEikAYUlMxqpjkftzWrdzrYF4G
"""

from google.colab import files

uploaded = files.upload()

import pandas as pd

# Recarregar os dados
df = pd.read_csv("Investimentos_Publicos_2014_a_2024.csv", sep=';', low_memory=False)

# Corrigir nomes de colunas
df.columns = df.columns.str.strip().str.lower()

# Corrigir valores monetários
df['movimento_liquido_reais'] = (
    df['movimento_liquido_reais']
    .astype(str)
    .str.replace('.', '', regex=False)
    .str.replace(',', '.', regex=False)
)
df['movimento_liquido_reais'] = pd.to_numeric(df['movimento_liquido_reais'], errors='coerce')

# Filtrar valores válidos (positivos e zero)
df = df[df['movimento_liquido_reais'] >= 0].copy()

#Dicionário dos meses
meses_dict = {
    'janeiro': '01', 'fevereiro': '02', 'marco': '03',
    'abril': '04', 'maio': '05', 'junho': '06',
    'julho': '07', 'agosto': '08', 'setembro': '09',
    'outubro': '10', 'novembro': '11', 'dezembro': '12'
}

# Mapeamento com segurança
df.loc[:, 'mes'] = df['mes'].str.strip().str.lower().map(meses_dict)

# Coluna de data
df['data'] = pd.to_datetime(df['ano'].astype(str) + '-' + df['mes'] + '-01', format='%Y-%m-%d', errors='coerce')

# Salvar
df.to_parquet("investimentos.parquet", index=False)

print("Arquivo atualizado: investimentos.parquet")








import pandas as pd

# Recarregar os dados
df = pd.read_csv("EstoqueDPF.csv", sep=';', low_memory=False)

# Corrigir nomes de colunas
df.columns = df.columns.str.strip().str.lower()

# Corrigir valores monetários
df['valor do estoque'] = (df['valor do estoque'].astype(str).str.replace('.', '', regex=False).str.replace(',', '.', regex=False))
df['valor do estoque'] = pd.to_numeric(df['valor do estoque'], errors='coerce')

df['quantidade do estoque'] = (df['quantidade do estoque'].astype(str).str.replace('.', '', regex=False).str.replace(',', '.', regex=False))
df['quantidade do estoque'] = pd.to_numeric(df['quantidade do estoque'], errors='coerce')

df['mes do estoque'] = pd.to_datetime(df['mes do estoque'].astype(str).str.slice(3, 7) + '-' + df['mes do estoque'].astype(str).str.slice(0, 2) + '-01', format='%Y-%m-%d', errors='coerce')

df['vencimento do titulo/contrato'] = pd.to_datetime(df['vencimento do titulo/contrato'], format='%d/%m/%Y', errors='coerce')

# Salvar
df.to_parquet("divida.parquet", index=False)

print("Arquivo atualizado: divida.parquet")








import pandas as pd

# Recarregar os dados
df = pd.read_csv("irpj-csll-ecf.csv", sep=';', low_memory=False)

df = df.drop('sit_especial', axis=1).drop('razao_social', axis=1).drop('forma_trib', axis=1).drop('chave', axis=1)
df = df.drop('qualif_pj', axis=1).drop('forma_apur', axis=1).drop('dt_ini', axis=1).drop('dt_fin', axis=1).drop('cod_scp', axis=1)
df = df.drop('data_hora_etl', axis=1).drop('data_ingestao', axis=1).drop('linha', axis=1).drop('cod_nat', axis=1)

df['cnae'] = (df['cnae'].astype(str).str.slice(0,4) + '-' + df['cnae'].astype(str).str.slice(4,5) + '/' + df['cnae'].astype(str).str.slice(5,7))

def numerico(coluna):
  df[coluna] = (
      df[coluna].fillna(0)
      .astype(str)
      .str.replace('.', '', regex=False)
      .str.replace(',', '.', regex=False)
  )
  df[coluna] = pd.to_numeric(df[coluna], errors='coerce')

campos = ['horario_eleitoral_deducao_lalur',
  'prouni_universidade_para_todos',
  'sudam_sudene_isencao_proj_ind_agric',
  'sudam_sudene_isencao_proj_tec_dig',
  'sudam_sudene_reducao_75_proj_setor_priorit',
  'sudam_sudene_red_escal_setor_prior_proj_ind_agric',
  'padis',
  'sudam_sudene_red_reinv',
  'finor',
  'finam',
  'pronac_deducao_ir',
  'pat_deducao_ir',
  'atividade_audiov_deducao_ir',
  'fundos_direitos_crianca_adolescente',
  'fundos_idoso',
  'incentivo_desporto',
  'pronon_deducao_ir',
  'pronas_pcd_deducao_ir',
  'empresa_cidada_deducao_ir',
  'rota_2030_deducao_ir',
  'prouni_deducao_csll',
  'rota_2030_deducao_csll',
  'perse_irpj',
  'perse_csll']

for campo in campos:
  numerico(campo)

df['total'] = df[campos].sum(axis=1)

# Salvar
df.to_parquet("renuncia.parquet", index=False)

print("Arquivo atualizado: renuncia.parquet")








import pandas as pd

# Recarregar os dados
df = pd.read_json("cnae.json")

df['cnae'] = (df['cnae'].astype(str).str.slice(0,4) + '-' + df['cnae'].astype(str).str.slice(4,5) + '/' + df['cnae'].astype(str).str.slice(5,7))

df
# Salvar
df.to_parquet("cnae.parquet", index=False)

print("Arquivo atualizado: cnae.parquet")